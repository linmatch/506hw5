---
title: "506hw5"
format:
  html:
    embed-resources: true
editor: visual
---

## Problem1

```{r}
library(ggplot2)
```

```{r}
library(readr)
library(tidyverse)
nnmaps <- read_csv("~/Desktop/chicago-nmmaps.csv")
##View(nnmaps)
```

##a

```{r}
##calculate the mean monthly temperature and the order it by month
df<-nnmaps %>% group_by(month_numeric,month,season) %>% summarize(avg_temp=mean(temp,na.rm=TRUE), .groups = "drop")%>%arrange(month_numeric)

##convert month into a factor variable with different levels
df$month <- factor(df$month, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))

##create a plot
ggplot(df, aes(x = month, y = avg_temp, color = season)) +
  geom_point()+
  geom_line(aes(group = season)) +
  ##set each season with different color
  scale_color_manual(values = c("orange", "pink", "green", "blue"))+
  ##set the labels of plot
  labs(title = "Mean Monthly Temperature in Celsius",
       x = "month",
       y = "mean temperature (celsius)")
```

##b

```{r}
##calculate the mean monthly temperature, mean monthly o3, mean monthly pm10, and mean monthly dewpoint, and then order it by month
df2<-nnmaps %>% group_by(month_numeric,month,season) %>% summarize(avg_temp=mean(temp,na.rm=TRUE), avg_o3=mean(o3, na.rm=TRUE), avg_pm10=mean(pm10,na.rm=TRUE), avg_dewpt=mean(dewpoint,na.rm=TRUE), .groups = "drop") %>% arrange(month_numeric)

##convert month into a factor variable with different levels
df2$month <- factor(df2$month, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))

##reshape the data frame
df2_longer<-df2 %>% select("month","avg_temp","avg_o3","avg_pm10","avg_dewpt") %>% pivot_longer(-month,names_to = "mean_value", values_to = "value")

##create a plot
ggplot(df2_longer, aes(x = month, y = value, color = mean_value, group = mean_value)) +
  geom_point() +
  geom_line() +
  scale_color_manual(values = c("avg_temp" = "orange", "avg_o3" = "pink", "avg_pm10" = "green", "avg_dewpt" = "blue"))+

labs(title = "Mean Monthly Data",
       x = "month",
       y = "mean value(monthly)")+
  theme(plot.title = element_text(hjust = 0.5))
```

From the output, we can see the green line, which is the variable "pm10" has the least seasonal trend.

## Problem2

## Problem3

```{r}
library(data.table)
library(nycflights13)
nyc13df<-data.table(flights)
```

##a

```{r}
##get the mean and median departure delay and group it by each airport name
table1<-nyc13df[,.(mean_dep_delay=mean(dep_delay, na.rm = TRUE), median_dep_delay=median(dep_delay, na.rm = TRUE)), by = .(origin)]
##print the table
table1[order(-mean_dep_delay)]
```

```{r}
table2<-nyc13df[,.(mean_arr_delay=mean(arr_delay, na.rm = TRUE), median_arr_delay=median(arr_delay, na.rm = TRUE)), by = .(dest)]

##print the table
table2[order(-mean_arr_delay)]
```
